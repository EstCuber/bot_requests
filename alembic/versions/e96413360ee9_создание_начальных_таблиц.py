"""Создание начальных таблиц

Revision ID: e96413360ee9
Revises: 
Create Date: 2025-08-19 09:37:58.462532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e96413360ee9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mountains')
    op.add_column('users', sa.Column('username', sa.String(), nullable=False))
    op.drop_column('users', 'id')
    op.drop_column('users', 'age')
    op.drop_column('users', 'name')
    op.drop_column('users', 'created')
    op.drop_column('users', 'updated')
    op.drop_column('users', 'city')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('city', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_column('users', 'username')
    op.create_table('mountains',
    sa.Column('mountain_code', sa.CHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('name_of_mountain', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('people_on_mountain', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('people_on_mountain > 0', name=op.f('mountains_people_on_mountain_check')),
    sa.PrimaryKeyConstraint('mountain_code', name=op.f('mountains_pkey'))
    )
    # ### end Alembic commands ###
